plugins {
    id "org.sonarqube" version "3.4.0.2513"
    id 'jacoco'
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.stormeye'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    // Place dependency version numbers here, because sub-projects cannot access root project gradle.properties
    ext {
        casperSdkVersion = '2.0.0'
        commonsConfigurationVersion = '2.8.0'
        commonsIoVersion = '2.11.0'
        commonsLangVersion = '3.12.0'
        commonsTextVersion = '1.9'
        cryptokeyVersion = '0.4.0'
        hamcrestVersion = '2.2'
        h2databaseVersion = '2.1.214'
        httpclientversion = '4.5.13'
        jodaTimeVersion = '2.12.1'
        jsonAssertVersion = '2.7.0'
        jsonrpc4jVersion = '1.6.1-oak'
        junitVersion = '5.9.0'
        log4jVersion = '2.18.0'
        lombokVersion = '1.18.24'
        lombokPluginVersion = '6.2.0'
        mockwebserverVersion = '4.10.0'
        mongoDriverVersion = '4.6.1'
        okhttpVersion = '4.10.0'
        openapiUiVersion = '1.6.11'
        postgresqlVersion = '42.5.0'
        sbs4jVersion = '0.1.5'
        snakeyamlVersion = '1.33'
        springBootVersion = '2.7.4'
        springDataMongodbVersion = '3.4.3'
        springDependencyManagementVersion = '1.0.14.RELEASE'
        springKafkaVersion = '2.9.0'
        springRetryVerion = '1.3.3'
        springActuator = '2.7.5'
        hibernateTypesVersion = '2.20.0'
    }

    test {
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        dependsOn test // tests are required to run before generating the report
    }

    jacocoTestReport {
        reports {
            xml.required = true
            csv.required = false
            //html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {

    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}


tasks.named('test') {
    useJUnitPlatform()
}

subprojects {
    repositories {
        mavenCentral()
    }
    sonarqube {
        properties {
            property "sonar.sources", "src"
            property "sonar.exclusions", "**/assets/**,**/test/**"
        }
    }
}
